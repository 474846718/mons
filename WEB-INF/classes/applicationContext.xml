<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
                        default-lazy-init="true" default-autowire="byName">
    <!-- 加载配置文件 -->          
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>              
    	
   	<!-- 连接池配置 -->
   	 <!--
    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName">
            <beans:value>btmp</beans:value>
        </beans:property>
    </beans:bean>
     -->

    <!-- 数据源配置 -->
   
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" lazy-init="false">
        <property name="driverClassName" value ="${datasource.driverClassName}"> </property>
        <property name="url" value="${datasource.url}"></property>
        <property name="username" value = "${datasource.username}"></property>
        <property name="password" value="${datasource.password}"> </property>
    </bean> 
    
    
    <!-- 使用SqlSessionFactoryBean工厂产生SqlSession对象 -->
    <bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">        
        <property name="dataSource" ref="dataSource" />
        <!-- 
        <property name="configLocation" value ="classpath:Configuration.xml"></property>
         -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />
    </bean>
    
    <!-- MapperScannerConfigurer配置 -->
    <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
    <!-- 
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">       
        <beans:property name="basePackage" value="com.adtec.app.db.mapper"></beans:property>
    </beans:bean>
     -->    
    <beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">       
        <beans:property name="basePackage" value="com.bomp.db.mapper"></beans:property>
        <beans:property name="sqlSessionFactoryBeanName" value="mySqlSessionFactory"></beans:property>
    </beans:bean>
     
    <!-- 由Spring管理MyBatis的事务 -->   
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <!-- 定义事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 定义方法的过滤规则 -->
        <tx:attributes>
            <!-- 定义所有tx打头的方法使用事务 -->
            <tx:method name="tx*" rollback-for="Exception" />
            <!-- 定义其他方法都是只读 -->
            <tx:method name="*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    
    <!-- 定义AOP配置 -->
    <aop:config>
        <!-- 定义一个切入点 -->
        <aop:pointcut id="testMethod" expression="execution(* test.service.impl.*.*(..))" />
        <!-- 对切入点和事务的通知，进行适配 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="testMethod" />
    </aop:config>      
    
    <bean id="dao" class="com.adtec.framework.core.dao.impl.GenericMyBatisDao">
        <!-- 
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
         -->
    </bean>
    
    <bean id="SpringContextUtil" class="com.adtec.framework.common.util.SpringContextUtil"></bean>
    
    <!-- 配置文件引入 -->
    <import resource="classpath*:spring/spring_bomp.xml" /> 
                          
</beans>                        